{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { viewStyles, imageStyles, textStyles, buttonStyles } from \"../styles\";\nimport random_icon from \"../../assets/random_icon.png\";\n\nvar RoundButton = function (_Component) {\n  _inherits(RoundButton, _Component);\n\n  var _super = _createSuper(RoundButton);\n\n  function RoundButton() {\n    _classCallCheck(this, RoundButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RoundButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: viewStyles.container\n      }, React.createElement(Image, {\n        style: imageStyles.image,\n        source: random_icon\n      }), React.createElement(Text, {\n        style: textStyles.title\n      }, \" CLICK THE BUTTON \"), React.createElement(Text, {\n        style: textStyles.title\n      }, \" BELOW! \"), React.createElement(TouchableOpacity, {\n        style: buttonStyles.button,\n        onPress: function onPress() {\n          return _this.goRandomDScreen();\n        }\n      }, React.createElement(Text, {\n        style: buttonStyles.title\n      }, \"RANDOM GOAL\")));\n    }\n  }, {\n    key: \"goRandomDScreen\",\n    value: function goRandomDScreen() {\n      this.props.navigation.navigate('Random2');\n    }\n  }]);\n\n  return RoundButton;\n}(Component);\n\nexport { RoundButton as default };\n;","map":{"version":3,"sources":["C:/Users/User PC/Documents/GitHub/todo-App/src/screens/Random.js"],"names":["React","Component","viewStyles","imageStyles","textStyles","buttonStyles","random_icon","RoundButton","container","image","title","button","goRandomDScreen","props","navigation","navigate"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAEA,SAAQC,UAAR,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,YAA7C;AACA,OAAOC,WAAP;;IAEqBC,W;;;;;;;;;;;;;WACjB,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,UAAU,CAACM;AAAxB,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEL,WAAW,CAACM,KAA1B;AAAiC,QAAA,MAAM,EAAEH;AAAzC,QADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,UAAU,CAACM;AAAxB,8BAFJ,EAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,UAAU,CAACM;AAAxB,oBAHJ,EAII,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEL,YAAY,CAACM,MAAtC;AAA8C,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,eAAL,EAAN;AAAA;AAAvD,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,YAAY,CAACK;AAA1B,uBADJ,CAJJ,CADJ;AAUH;;;WACD,2BAAiB;AACb,WAAKG,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B;AACH;;;;EAfoCd,S;;SAApBM,W;AAgBpB","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Image, Text, TouchableOpacity} from 'react-native';\r\nimport {viewStyles, imageStyles, textStyles, buttonStyles} from '../styles';\r\nimport random_icon from '../../assets/random_icon.png';\r\n\r\nexport default class RoundButton extends Component{\r\n    render() {\r\n        return (\r\n            <View style={viewStyles.container}>\r\n                <Image style={imageStyles.image} source={random_icon} />\r\n                <Text style={textStyles.title}> CLICK THE BUTTON </Text>\r\n                <Text style={textStyles.title}> BELOW! </Text>\r\n                <TouchableOpacity style={buttonStyles.button} onPress={() => this.goRandomDScreen()}>\r\n                    <Text style={buttonStyles.title}>RANDOM GOAL</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n         );\r\n    };\r\n    goRandomDScreen(){ \r\n        this.props.navigation.navigate('Random2'); \r\n    };       \r\n};\r\n"]},"metadata":{},"sourceType":"module"}